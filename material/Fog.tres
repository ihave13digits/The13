[gd_resource type="VisualShader" load_steps=6 format=2]

[ext_resource path="res://image/env/fog.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorFunc" id=1]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 200100, 200, 200 ) ]

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "camera"

[sub_resource type="VisualShaderNodeExpression" id=4]
size = Vector2( 556, 265 )
expression = "color = vec3(1, 0 ,0);"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Expression:5
	vec3 n_out5p0;
	n_out5p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out5p0 = vec3(1, 0 ,0);
	}

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -906.391, -17.113 )
nodes/fragment/0/position = Vector2( 960, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 140, 260 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 520, 120 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 160, 160 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 360, 420 )
nodes/fragment/5/size = Vector2( 556, 265 )
nodes/fragment/5/input_ports = ""
nodes/fragment/5/output_ports = "0,1,color;"
nodes/fragment/5/expression = "color = vec3(1, 0 ,0);"
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0 )
