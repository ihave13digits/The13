[gd_resource type="VisualShader" load_steps=16 format=2]

[ext_resource path="res://image/env/land_stone.png" type="Texture" id=1]
[ext_resource path="res://image/env/land_dirt.png" type="Texture" id=2]
[ext_resource path="res://image/env/land_sand.png" type="Texture" id=3]
[ext_resource path="res://image/env/land_grass.png" type="Texture" id=4]
[ext_resource path="res://texture/land_noise_texture.tres" type="Texture" id=5]

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 0
texture = ExtResource( 5 )
texture_type = 1

[sub_resource type="VisualShaderNodeScalarOp" id=2]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=3]
output_port_for_preview = 0
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
output_port_for_preview = 0
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=5]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=8]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=10]
output_port_for_preview = 0

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_10 : hint_albedo;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, UV.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarOp:9
	float n_in9p1 = 0.00000;
	float n_out9p0 = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)) + n_in9p1;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, UV.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarOp:8
	float n_out8p0 = n_out9p0 + dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333));

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// ScalarOp:7
	float n_out7p0 = n_out8p0 + dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ScalarOp:6
	float n_out6p0 = n_out7p0 + dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:11
	float n_out11p0 = n_out6p0 + dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333));

// Output:0
	ALBEDO = n_out10p0;
	ROUGHNESS = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -101.333, 158.333 )
nodes/fragment/0/position = Vector2( 600, 200 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -600, 200 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( 0, 200 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( -200, 200 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -400, 200 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 200, 460 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 0, 460 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( -200, 460 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -400, 460 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 180, 200 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 400, 460 )
nodes/fragment/connections = PoolIntArray( 2, 0, 9, 0, 9, 0, 8, 0, 8, 0, 7, 0, 7, 0, 6, 0, 10, 0, 0, 0, 5, 0, 8, 1, 4, 0, 7, 1, 3, 0, 6, 1, 10, 0, 11, 1, 6, 0, 11, 0, 11, 0, 0, 3 )
